"""add accounts, transactions, rules, summaries

Revision ID: 96308cb7f1f8
Revises: 13d0771d4cd4
Create Date: 2025-10-17 06:06:42.248855

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '96308cb7f1f8'
down_revision: Union[str, Sequence[str], None] = '13d0771d4cd4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('summaries',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('month', sa.CHAR(length=7), nullable=False),
    sa.Column('kpis', sa.JSON(), nullable=False),
    sa.Column('summary_text', sa.Text(), nullable=False),
    sa.Column('forecast', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'month', name='uq_summaries_user_month')
    )
    op.create_index(op.f('ix_summaries_user_id'), 'summaries', ['user_id'], unique=False)
    op.create_table('accounts',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('provider', sa.String(length=50), nullable=False),
    sa.Column('display_name', sa.String(length=120), nullable=False),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_accounts_user_id'), 'accounts', ['user_id'], unique=False)
    op.create_table('rules',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('category_id', sa.BigInteger(), nullable=False),
    sa.Column('scope', sa.String(length=30), nullable=False),
    sa.Column('pattern', sa.String(length=255), nullable=False),
    sa.Column('enabled', sa.Boolean(), server_default='1', nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rules_user_id'), 'rules', ['user_id'], unique=False)
    op.create_table('transactions',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('account_id', sa.BigInteger(), nullable=False),
    sa.Column('txn_time', sa.DateTime(), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=14, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('type', sa.String(length=10), nullable=False),
    sa.Column('merchant', sa.String(length=160), nullable=True),
    sa.Column('memo', sa.String(length=255), nullable=True),
    sa.Column('category_id', sa.BigInteger(), nullable=True),
    sa.Column('balance_after', sa.DECIMAL(precision=14, scale=2), nullable=True),
    sa.Column('source', sa.String(length=20), nullable=False),
    sa.Column('raw', sa.JSON(), nullable=True),
    sa.Column('model_confidence', sa.DECIMAL(precision=5, scale=4), nullable=True),
    sa.Column('locked', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('txn_hash', sa.CHAR(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transactions_account_id'), 'transactions', ['account_id'], unique=False)
    op.create_index(op.f('ix_transactions_txn_hash'), 'transactions', ['txn_hash'], unique=False)
    op.create_index(op.f('ix_transactions_user_id'), 'transactions', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_transactions_user_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_txn_hash'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_account_id'), table_name='transactions')
    op.drop_table('transactions')
    op.drop_index(op.f('ix_rules_user_id'), table_name='rules')
    op.drop_table('rules')
    op.drop_index(op.f('ix_accounts_user_id'), table_name='accounts')
    op.drop_table('accounts')
    op.drop_index(op.f('ix_summaries_user_id'), table_name='summaries')
    op.drop_table('summaries')
    # ### end Alembic commands ###
